{"version":3,"file":"youpin-img.js","sources":["../index.js"],"sourcesContent":["const URL=require('url');\n\nfunction parse(url){\n    const ret=URL.parse(url,true);\n    delete ret.search;\n    return ret;\n}\nexport default class YoupinImg {\n    constructor(url) {    \n        const base=typeof document==='undefined'?'https://':location.href;\n        url=URL.resolve('https://',url);\n        this.a = parse(url);\n        if (url.match(/@base/)) {\n            this.mode = \"kingsoft\";\n        } else if (/app\\/shop\\/img\\?/.test(url)) {\n            this.mode = \"standard\";\n        } else {\n            this.mode = \"unkown\";\n        }\n    }\n    get url(){\n        return URL.format(this.a); \n    }\n    set url(value){\n        console.warn(\"u can't set its url\");\n    }\n    setWebp() {\n        switch (this.mode) {\n            case \"standard\":\n                this.standardAddParam('t','webp');\n                break;\n            case \"kingsoft\": {\n                this.kingsoftAddParam('F','webp');\n                break;\n            }\n        }\n        return this;\n    }\n    resize({w, h}) {\n        switch (this.mode) {\n            case \"standard\":\n                this.standardAddParams({ w, h });\n                break;\n            case \"kingsoft\": {\n                let inner = {\n                    w: this.kingsoftGetParam(\"w\"),\n                    h: this.kingsoftGetParam(\"h\")\n                };\n                if (inner.w && inner.h) {\n                    let scalew =w / this.kingsoftGetParam(\"etw\")||1;\n                    let scaleh=h / this.kingsoftGetParam(\"eth\")||1;\n                    this.kingsoftAddParams({\n                        w: Math.round(scalew * inner.w),\n                        h: Math.round(scaleh * inner.h)\n                    });\n                }\n                this.kingsoftAddParams({\n                    etw: w,\n                    eth: h\n                });\n\n                break;\n            }\n        }\n        return this;\n    }\n    getSize() {\n        if (this.mode === \"standard\") {\n            return {\n                w: this.standardGetParam(\"w\"),\n                h: this.standardGetParam(\"h\")\n            };\n        } else if (this.mode === \"kingsoft\") {\n            return {\n                w: this.kingsoftGetParam(\"etw\"),\n                h: this.kingsoftGetParam(\"eth\")\n            };\n        }\n    }\n    standardGetParam(key) {        \n        return this.a.query[key];        \n    }\n    kingsoftGetParam(key) {\n        return (this.a.pathname.match(new RegExp(`[?|&]${key}=(\\\\d+)`)) ||\n            [])[1];\n    }\n    standardAddParams(map) {\n        Object.assign(this.a.query,map);\n    }\n    standardAddParam(key, value) {\n        this.a.query[key]=value;\n    }\n    kingsoftAddParams(map) {\n        this.kingsoftAddParam(undefined, undefined, map);\n    }\n    kingsoftAddParam(key, value, map) {\n        \n        const action = (this.a.pathname.match(/@[\\s\\S]+?(&|$)/, \"?\") || [\"\"])[0];\n        let pathname = this.a.pathname;\n        if (action) {\n            pathname = pathname.replace(action, \"?\");\n        }\n        let paramsMap = map || { [key]: value };\n        let pathnameObj=parse(pathname);\n        Object.assign(pathnameObj.query,paramsMap)\n        pathname=URL.format(pathnameObj);        \n        if (action) {\n            pathname = pathname.replace(\"?\", action);\n        }\n        this.a.pathname = pathname;\n    }\n}\n\n"],"names":["const","URL","require","parse","url","ret","search","YoupinImg","document","location","resolve","a","this","mode","match","test","format","value","console","warn","setWebp","standardAddParam","kingsoftAddParam","resize","ref","standardAddParams","w","h","inner","kingsoftGetParam","let","scalew","scaleh","kingsoftAddParams","Math","round","getSize","standardGetParam","key","query","pathname","RegExp","map","Object","assign","undefined","action","replace","paramsMap","pathnameObj"],"mappings":"AAAAA,IAAMC,EAAIC,QAAQ,OAElB,SAASC,EAAMC,GACXJ,IAAMK,EAAIJ,EAAIE,MAAMC,GAAI,GAExB,cADOC,EAAIC,OACJD,EAEI,IAAME,EACjB,SAAYH,GACqB,oBAAXI,UAAkCC,WAChDR,EAAIS,QAAQ,WAAWN,QACtBO,EAAIR,EAAMC,GAEXQ,KAAKC,KADLT,EAAIU,MAAM,SACE,WACL,mBAAmBC,KAAKX,GACnB,WAEA,sCAGhBA,0BACOH,EAAIe,OAAOJ,KAAKD,MAEvBP,iBAAIa,GACJC,QAAQC,KAAK,oCAEjBC,0BACYR,KAAKC,MACT,IAAK,gBACIQ,iBAAiB,IAAI,QAC1B,MACJ,IAAK,gBACIC,iBAAiB,IAAI,eAI3BV,kBAEXW,gBAAOC,0BACKZ,KAAKC,MACT,IAAK,gBACIY,qBAAoBC,IAAGC,IAC5B,MACJ,IAAK,eACGC,GACAF,EAAGd,KAAKiB,iBAAiB,KACzBF,EAAGf,KAAKiB,iBAAiB,SAEzBD,EAAMF,GAAKE,EAAMD,EAAG,CACpBG,IAAIC,EAAQL,EAAId,KAAKiB,iBAAiB,QAAQ,EAC1CG,EAAOL,EAAIf,KAAKiB,iBAAiB,QAAQ,OACxCI,qBACEC,KAAKC,MAAMJ,EAASH,EAAMF,KAC1BQ,KAAKC,MAAMH,EAASJ,EAAMD,UAGhCM,uBACIP,MACAC,WAMVf,kBAEXwB,mBACI,MAAkB,aAAdxB,KAAKC,MAEDa,EAAGd,KAAKyB,iBAAiB,KACzBV,EAAGf,KAAKyB,iBAAiB,MAER,aAAdzB,KAAKC,MAERa,EAAGd,KAAKiB,iBAAiB,OACzBF,EAAGf,KAAKiB,iBAAiB,aAH1B,eAOXQ,0BAAiBC,UACN1B,KAAKD,EAAE4B,MAAMD,gBAExBT,0BAAiBS,UACL1B,KAAKD,EAAE6B,SAAS1B,MAAM,IAAI2B,eAAeH,mBACzC,gBAEZb,2BAAkBiB,GACdC,OAAOC,OAAOhC,KAAKD,EAAE4B,MAAMG,gBAE/BrB,0BAAiBiB,EAAKrB,QACbN,EAAE4B,MAAMD,GAAKrB,eAEtBgB,2BAAkBS,QACTpB,sBAAiBuB,OAAWA,EAAWH,gBAEhDpB,0BAAiBgB,EAAKrB,EAAOyB,SAEnBI,GAAUlC,KAAKD,EAAE6B,SAAS1B,MAAM,iBAAkB,OAAS,KAAK,GAClE0B,EAAW5B,KAAKD,EAAE6B,SAClBM,MACWN,EAASO,QAAQD,EAAQ,MAExChB,IAAIkB,EAAYN,WAAUJ,GAAMrB,KAC5BgC,EAAY9C,EAAMqC,UACfI,OAAOK,EAAYV,MAAMS,KACvB/C,EAAIe,OAAOiC,GAChBH,MACWN,EAASO,QAAQ,IAAKD,IAErClC,KAAKD,EAAE6B,SAAWA"}